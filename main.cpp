#include <string>
#include <iostream>

//Функция проверки строки на кратность числу K. Возращает результат проверки.

auto IsKPeriodic(std::string text, size_t K) 
{
	//Проверка кратности длины строки числу K. Если длина не кратна - возвращает
	//"ложь" и прекращает дальнейшую проверку.

	if (text.size() % K != 0)
		return false;
	
	//Определение размера подстроки для проверки.

	size_t range = text.size() / K;

	//Проверка повторяемости подстроки символов в диапазоне [0,range] с шагом 
	//range, начиная с позиции range и до конца строки. В случае отсутствия 
	//совпадения подстроки и проверяемого диапазона строки, прекращает проверку
	//и возвращает "ложь".

	for (size_t i = range; i < text.size(); i += range)
		if (text.substr(0, range) != text.substr(i, range)) 
			return false;

	//В случае успешной проверки на кратность - возвращает "истина".

	return true;
};

//Функция вывода на экран исходных данных и результатов проверки на кратность,
//путем обращения к функции IsKPeriodic с передачей исходных данных.

void PrintInfo(std::string text, size_t K)
{
	system("cls");
	std::cout << "ПРОВЕРКА КРАТНОСТИ СТРОКИ ЧИСЛУ K" << std::endl << std::endl;
	std::cout << "Строка: " << text << std::endl;
	std::cout << "Число K = " << K << std::endl;
	std::cout << "Строка " << (IsKPeriodic(text, K) ? "" : "не ")
		<< "кратна числу K" << std::endl << std::endl;
};

//Основной блок программы. Пользовательское меню из 2-ух команд: 1 - ввод 
//данных и 2 - выход из программы. Циклично запрашивает исходные данные и
//выдает результаты после каждого ввода, до выбора команды выхода.

auto main() -> int
{
	system("chcp 1251");
	system("cls");
	std::cout << "ПРОВЕРКА КРАТНОСТИ СТРОКИ ЧИСЛУ K" << std::endl << std::endl;
	size_t command = NULL;
	
	do
	{
		
		//Пользовательское меню из 2-ух команд, с реализацией защиты от ввода 
		//не предусмотренных программой команд.

		std::cout << "Введите 1 - для ввода данных или 2 - для выхода: ";
		while (!(std::cin >> command) || (std::cin.peek() != '\n') || !(command == 1
			|| command == 2))
		{
			std::cin.clear();
			while (std::cin.get() != '\n');
			std::cout << "Вы ввели неверный номер комманды. Повторите ввод: "
				<< std::endl;
		}
		
		//Реализация выбора 1 пункта пользовательского меню. Ввод исходных данных 
		//для проверки на кратность. Реализована защита от ввода значения числа K, 
		//не сооответствующего условиям задачи: целочисленное число, больше нуля.

		if (command == 1)
		{
			std::string text;
			size_t K = NULL;
			std::cout << "Введите проверяемую строку:" << std::endl;
			std::cin.ignore();
			std::getline(std::cin, text);
			std::cout << "Введите целое число K (K должно быть больше 0): ";
			while (!(std::cin >> K) || (std::cin.peek() != '\n') || !(K > 0))
			{
				std::cin.clear();
				while (std::cin.get() != '\n');
				std::cout << "Вы ввели неверное число K. Пожалуйста, повторите ввод: "
					<< std::endl;
			}

			//Вызов функции вывода на экран результатов проверки.

			PrintInfo(text, K);
		}
	} while (command == 1);
	
	return 0;
}